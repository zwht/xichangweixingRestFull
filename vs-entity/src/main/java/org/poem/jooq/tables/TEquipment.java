/*
 * This file is generated by jOOQ.
 */
package org.poem.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.poem.jooq.Indexes;
import org.poem.jooq.Keys;
import org.poem.jooq.Public;
import org.poem.jooq.tables.records.TEquipmentRecord;


/**
 * 新闻
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TEquipment extends TableImpl<TEquipmentRecord> {

    private static final long serialVersionUID = -1104991796;

    /**
     * The reference instance of <code>public.t_equipment</code>
     */
    public static final TEquipment T_EQUIPMENT = new TEquipment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TEquipmentRecord> getRecordType() {
        return TEquipmentRecord.class;
    }

    /**
     * The column <code>public.t_equipment.id</code>.
     */
    public final TableField<TEquipmentRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.t_equipment.code</code>. 设备编号
     */
    public final TableField<TEquipmentRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(200), this, "设备编号");

    /**
     * The column <code>public.t_equipment.name</code>. 设备名称
     */
    public final TableField<TEquipmentRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(200), this, "设备名称");

    /**
     * The column <code>public.t_equipment.equip_type</code>. 设备类型
     */
    public final TableField<TEquipmentRecord, Long> EQUIP_TYPE = createField("equip_type", org.jooq.impl.SQLDataType.BIGINT, this, "设备类型");

    /**
     * The column <code>public.t_equipment.format</code>. 规格
     */
    public final TableField<TEquipmentRecord, String> FORMAT = createField("format", org.jooq.impl.SQLDataType.VARCHAR(100), this, "规格");

    /**
     * The column <code>public.t_equipment.package_format</code>. 包装规格
     */
    public final TableField<TEquipmentRecord, String> PACKAGE_FORMAT = createField("package_format", org.jooq.impl.SQLDataType.VARCHAR(100), this, "包装规格");

    /**
     * The column <code>public.t_equipment.measurement</code>. 计量单位
     */
    public final TableField<TEquipmentRecord, String> MEASUREMENT = createField("measurement", org.jooq.impl.SQLDataType.VARCHAR(100), this, "计量单位");

    /**
     * The column <code>public.t_equipment.standard</code>. 标准或批号
     */
    public final TableField<TEquipmentRecord, String> STANDARD = createField("standard", org.jooq.impl.SQLDataType.VARCHAR(100), this, "标准或批号");

    /**
     * The column <code>public.t_equipment.manufacture_date</code>. 生产日期
     */
    public final TableField<TEquipmentRecord, Timestamp> MANUFACTURE_DATE = createField("manufacture_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "生产日期");

    /**
     * The column <code>public.t_equipment.validity</code>. 有效期
     */
    public final TableField<TEquipmentRecord, Timestamp> VALIDITY = createField("validity", org.jooq.impl.SQLDataType.TIMESTAMP, this, "有效期");

    /**
     * The column <code>public.t_equipment.supplier_id</code>. 供应商
     */
    public final TableField<TEquipmentRecord, Long> SUPPLIER_ID = createField("supplier_id", org.jooq.impl.SQLDataType.BIGINT, this, "供应商");

    /**
     * The column <code>public.t_equipment.images</code>. 图片
     */
    public final TableField<TEquipmentRecord, Long> IMAGES = createField("images", org.jooq.impl.SQLDataType.BIGINT, this, "图片");

    /**
     * The column <code>public.t_equipment.remark</code>. 备注
     */
    public final TableField<TEquipmentRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(500), this, "备注");

    /**
     * The column <code>public.t_equipment.status</code>. 状态
     */
    public final TableField<TEquipmentRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER, this, "状态");

    /**
     * The column <code>public.t_equipment.create_user</code>. 创建人
     */
    public final TableField<TEquipmentRecord, Long> CREATE_USER = createField("create_user", org.jooq.impl.SQLDataType.BIGINT, this, "创建人");

    /**
     * The column <code>public.t_equipment.create_time</code>. 创建时间
     */
    public final TableField<TEquipmentRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>public.t_equipment.update_user</code>. 修改人
     */
    public final TableField<TEquipmentRecord, Long> UPDATE_USER = createField("update_user", org.jooq.impl.SQLDataType.BIGINT, this, "修改人");

    /**
     * The column <code>public.t_equipment.update_time</code>. 修改时间
     */
    public final TableField<TEquipmentRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "修改时间");

    /**
     * The column <code>public.t_equipment.flag</code>. 标识
     */
    public final TableField<TEquipmentRecord, Boolean> FLAG = createField("flag", org.jooq.impl.SQLDataType.BOOLEAN, this, "标识");

    /**
     * Create a <code>public.t_equipment</code> table reference
     */
    public TEquipment() {
        this(DSL.name("t_equipment"), null);
    }

    /**
     * Create an aliased <code>public.t_equipment</code> table reference
     */
    public TEquipment(String alias) {
        this(DSL.name(alias), T_EQUIPMENT);
    }

    /**
     * Create an aliased <code>public.t_equipment</code> table reference
     */
    public TEquipment(Name alias) {
        this(alias, T_EQUIPMENT);
    }

    private TEquipment(Name alias, Table<TEquipmentRecord> aliased) {
        this(alias, aliased, null);
    }

    private TEquipment(Name alias, Table<TEquipmentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("新闻"));
    }

    public <O extends Record> TEquipment(Table<O> child, ForeignKey<O, TEquipmentRecord> key) {
        super(child, key, T_EQUIPMENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PK_T_EQUIPMENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TEquipmentRecord> getPrimaryKey() {
        return Keys.PK_T_EQUIPMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TEquipmentRecord>> getKeys() {
        return Arrays.<UniqueKey<TEquipmentRecord>>asList(Keys.PK_T_EQUIPMENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEquipment as(String alias) {
        return new TEquipment(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEquipment as(Name alias) {
        return new TEquipment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TEquipment rename(String name) {
        return new TEquipment(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TEquipment rename(Name name) {
        return new TEquipment(name, null);
    }
}
