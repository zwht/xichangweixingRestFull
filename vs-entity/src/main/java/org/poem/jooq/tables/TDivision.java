/*
 * This file is generated by jOOQ.
 */
package org.poem.jooq.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.poem.jooq.Indexes;
import org.poem.jooq.Keys;
import org.poem.jooq.Public;
import org.poem.jooq.tables.records.TDivisionRecord;


/**
 * 区划表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TDivision extends TableImpl<TDivisionRecord> {

    private static final long serialVersionUID = -971708901;

    /**
     * The reference instance of <code>public.t_division</code>
     */
    public static final TDivision T_DIVISION = new TDivision();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TDivisionRecord> getRecordType() {
        return TDivisionRecord.class;
    }

    /**
     * The column <code>public.t_division.id</code>.
     */
    public final TableField<TDivisionRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.t_division.code</code>. 行政区划代码
     */
    public final TableField<TDivisionRecord, Long> CODE = createField("code", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "行政区划代码");

    /**
     * The column <code>public.t_division.name</code>. 名称
     */
    public final TableField<TDivisionRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(60), this, "名称");

    /**
     * The column <code>public.t_division.full_name</code>. 完整名称
     */
    public final TableField<TDivisionRecord, String> FULL_NAME = createField("full_name", org.jooq.impl.SQLDataType.VARCHAR(200), this, "完整名称");

    /**
     * The column <code>public.t_division.parent_id</code>. 父级id
     */
    public final TableField<TDivisionRecord, Long> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.BIGINT, this, "父级id");

    /**
     * The column <code>public.t_division.level</code>. 层级
     */
    public final TableField<TDivisionRecord, Short> LEVEL = createField("level", org.jooq.impl.SQLDataType.SMALLINT, this, "层级");

    /**
     * The column <code>public.t_division.district_id</code>. 区县id
     */
    public final TableField<TDivisionRecord, Long> DISTRICT_ID = createField("district_id", org.jooq.impl.SQLDataType.BIGINT, this, "区县id");

    /**
     * The column <code>public.t_division.town_id</code>. 乡镇ID
     */
    public final TableField<TDivisionRecord, Long> TOWN_ID = createField("town_id", org.jooq.impl.SQLDataType.BIGINT, this, "乡镇ID");

    /**
     * Create a <code>public.t_division</code> table reference
     */
    public TDivision() {
        this(DSL.name("t_division"), null);
    }

    /**
     * Create an aliased <code>public.t_division</code> table reference
     */
    public TDivision(String alias) {
        this(DSL.name(alias), T_DIVISION);
    }

    /**
     * Create an aliased <code>public.t_division</code> table reference
     */
    public TDivision(Name alias) {
        this(alias, T_DIVISION);
    }

    private TDivision(Name alias, Table<TDivisionRecord> aliased) {
        this(alias, aliased, null);
    }

    private TDivision(Name alias, Table<TDivisionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("区划表"));
    }

    public <O extends Record> TDivision(Table<O> child, ForeignKey<O, TDivisionRecord> key) {
        super(child, key, T_DIVISION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_DIVISION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TDivisionRecord> getPrimaryKey() {
        return Keys.T_DIVISION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TDivisionRecord>> getKeys() {
        return Arrays.<UniqueKey<TDivisionRecord>>asList(Keys.T_DIVISION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TDivision as(String alias) {
        return new TDivision(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TDivision as(Name alias) {
        return new TDivision(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TDivision rename(String name) {
        return new TDivision(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TDivision rename(Name name) {
        return new TDivision(name, null);
    }
}
