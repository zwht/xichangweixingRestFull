/*
 * This file is generated by jOOQ.
 */
package org.poem.jooq.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.poem.jooq.Indexes;
import org.poem.jooq.Keys;
import org.poem.jooq.Public;
import org.poem.jooq.tables.records.TOrderingMealsRecord;


/**
 * 网上订餐
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TOrderingMeals extends TableImpl<TOrderingMealsRecord> {

    private static final long serialVersionUID = -667924677;

    /**
     * The reference instance of <code>public.t_ordering_meals</code>
     */
    public static final TOrderingMeals T_ORDERING_MEALS = new TOrderingMeals();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TOrderingMealsRecord> getRecordType() {
        return TOrderingMealsRecord.class;
    }

    /**
     * The column <code>public.t_ordering_meals.id</code>.
     */
    public final TableField<TOrderingMealsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.t_ordering_meals.name</code>. 用餐人姓名
     */
    public final TableField<TOrderingMealsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(200), this, "用餐人姓名");

    /**
     * The column <code>public.t_ordering_meals.idnum</code>. 身份证
     */
    public final TableField<TOrderingMealsRecord, String> IDNUM = createField("idnum", org.jooq.impl.SQLDataType.VARCHAR(200), this, "身份证");

    /**
     * The column <code>public.t_ordering_meals.phone</code>. 联系电话
     */
    public final TableField<TOrderingMealsRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR(20), this, "联系电话");

    /**
     * The column <code>public.t_ordering_meals.workers</code>. 工作单位
     */
    public final TableField<TOrderingMealsRecord, String> WORKERS = createField("workers", org.jooq.impl.SQLDataType.VARCHAR(200), this, "工作单位");

    /**
     * The column <code>public.t_ordering_meals.eats_count</code>. 用餐人数
     */
    public final TableField<TOrderingMealsRecord, Integer> EATS_COUNT = createField("eats_count", org.jooq.impl.SQLDataType.INTEGER, this, "用餐人数");

    /**
     * The column <code>public.t_ordering_meals.eat_time</code>. 用餐时间
     */
    public final TableField<TOrderingMealsRecord, Timestamp> EAT_TIME = createField("eat_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "用餐时间");

    /**
     * The column <code>public.t_ordering_meals.remark</code>. 备注
     */
    public final TableField<TOrderingMealsRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(200), this, "备注");

    /**
     * The column <code>public.t_ordering_meals.status</code>. 状态
     */
    public final TableField<TOrderingMealsRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER, this, "状态");

    /**
     * The column <code>public.t_ordering_meals.create_user</code>. 创建人
     */
    public final TableField<TOrderingMealsRecord, Long> CREATE_USER = createField("create_user", org.jooq.impl.SQLDataType.BIGINT, this, "创建人");

    /**
     * The column <code>public.t_ordering_meals.create_time</code>. 创建时间
     */
    public final TableField<TOrderingMealsRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>public.t_ordering_meals.update_user</code>. 修改人
     */
    public final TableField<TOrderingMealsRecord, Long> UPDATE_USER = createField("update_user", org.jooq.impl.SQLDataType.BIGINT, this, "修改人");

    /**
     * The column <code>public.t_ordering_meals.update_time</code>. 修改时间
     */
    public final TableField<TOrderingMealsRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "修改时间");

    /**
     * The column <code>public.t_ordering_meals.flag</code>. 标识
     */
    public final TableField<TOrderingMealsRecord, Boolean> FLAG = createField("flag", org.jooq.impl.SQLDataType.BOOLEAN, this, "标识");

    /**
     * Create a <code>public.t_ordering_meals</code> table reference
     */
    public TOrderingMeals() {
        this(DSL.name("t_ordering_meals"), null);
    }

    /**
     * Create an aliased <code>public.t_ordering_meals</code> table reference
     */
    public TOrderingMeals(String alias) {
        this(DSL.name(alias), T_ORDERING_MEALS);
    }

    /**
     * Create an aliased <code>public.t_ordering_meals</code> table reference
     */
    public TOrderingMeals(Name alias) {
        this(alias, T_ORDERING_MEALS);
    }

    private TOrderingMeals(Name alias, Table<TOrderingMealsRecord> aliased) {
        this(alias, aliased, null);
    }

    private TOrderingMeals(Name alias, Table<TOrderingMealsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("网上订餐"));
    }

    public <O extends Record> TOrderingMeals(Table<O> child, ForeignKey<O, TOrderingMealsRecord> key) {
        super(child, key, T_ORDERING_MEALS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PK_T_ORDERING_MEALS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TOrderingMealsRecord> getPrimaryKey() {
        return Keys.PK_T_ORDERING_MEALS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TOrderingMealsRecord>> getKeys() {
        return Arrays.<UniqueKey<TOrderingMealsRecord>>asList(Keys.PK_T_ORDERING_MEALS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderingMeals as(String alias) {
        return new TOrderingMeals(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderingMeals as(Name alias) {
        return new TOrderingMeals(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TOrderingMeals rename(String name) {
        return new TOrderingMeals(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TOrderingMeals rename(Name name) {
        return new TOrderingMeals(name, null);
    }
}
