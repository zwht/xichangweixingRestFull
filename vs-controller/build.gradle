apply from : '../build.gradle'
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'


dependencies {
    compile( project(":vs-service") )
}


//拷贝配置文件
task copyYAML(type: Copy) {
    def profile = System.properties['profile']
    if (profile==null){
        println "controller ozc copyYAML"
        def key="spring.profiles.include"
        Properties properties = new Properties();
        // 使用ClassLoader加载properties配置文件生成对应的输入流
        FileInputStream input = new FileInputStream("${rootProject.projectDir}/vs-controller/src/main/resources/application.properties")
        // 使用properties对象加载输入流
        properties.load(input)
        //获取key对应的value值
        profile=properties.getProperty(key)
    }
    def profileFileName=""
    if (profile==null){
        profileFileName = "application-dev.yml"
    }else{
        profileFileName = "application-${profile}.yml"
    }
    println "profileFileName: $profileFileName"
    from file("${rootProject.projectDir}/vs-common/src/main/resources/${profileFileName}")
    into file("${rootProject.projectDir}/vs-controller/build/classes/java/main/")
    rename("${profileFileName}","application.yml")
}

//在war之前执行，将申明配置文件的yml先删掉
project.bootWar.doFirst {
    println "controller ozc war.doFirst"
    println "rootProject.projectDir=${rootProject.projectDir}"
    delete("${rootProject.projectDir}/vs-controller/build/resources/main/application.properties")
}

bootWar {
    println "controller ozc war excute"
    dependsOn copyYAML
    archiveName "ROOT.war"
}

//gradle clean etl-controller:war -Dprofile=dev2
build.dependsOn(bootWar)